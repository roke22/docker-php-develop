version: '2.4'

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  postgres-data:
      external: true

services:
### NGINX Server #########################################
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ${APP_CODE_FIRST_PROJECT}:/var/www/html
      - ${APP_CODE_SECOND_PROJECT}:/var/www/html2
      - ${APP_CODE_THIRD_PROJECT}:/var/www/html3
      - ./nginx/ssl/:/etc/nginx/ssl
      - ./nginx/sites/site.conf:/etc/nginx/conf.d/default.conf
    networks:
        - frontend
        - backend

  ### PHP Server ###########################################
  # You can change the image to change version of php, for example:
  # image: php:8.0-fpm
  # image: php:7.4-fpm
  # image: php:7.3-fpm
  # image: php:7.2-fpm
  # image: php:7.1-fpm
  # image: php:7.0-fpm
  php:
    image: php:7.0-fpm
    ports:
      - "9000:9000"
    networks:
        - frontend
        - backend
    volumes:
      - ${APP_CODE_FIRST_PROJECT}:/var/www/html
      - ${APP_CODE_SECOND_PROJECT}:/var/www/html2
      - ${APP_CODE_THIRD_PROJECT}:/var/www/html3

### PostgreSQL ###########################################
  postgres:
    build: ./postgres-11
    volumes:
        - postgres-data:/var/lib/postgresql/data
        - ./postgres-11/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
        - "5432:5432"
    environment:
        - POSTGRES_DB=db
        - POSTGRES_USER=user
        - POSTGRES_PASSWORD=password
    networks:
        - frontend
        - backend
    command: postgres -c config_file=/etc/postgresql.conf

